<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="sAdvertisement" xml:space="preserve">
    <value>Advertisement</value>
  </data>
  <data name="sAlbum" xml:space="preserve">
    <value>Album</value>
  </data>
  <data name="sArchive" xml:space="preserve">
    <value>Archive</value>
  </data>
  <data name="sArtist" xml:space="preserve">
    <value>Artist</value>
  </data>
  <data name="sArtists" xml:space="preserve">
    <value>Artists</value>
  </data>
  <data name="sArtistsMissing" xml:space="preserve">
    <value>Artists missing</value>
  </data>
  <data name="sAssetID" xml:space="preserve">
    <value>Asset ID</value>
  </data>
  <data name="sAssetName" xml:space="preserve">
    <value>Asset name</value>
  </data>
  <data name="sAssets" xml:space="preserve">
    <value>Assets</value>
  </data>
  <data name="sAssetSearch" xml:space="preserve">
    <value>Asset search</value>
  </data>
  <data name="sCheckPoint" xml:space="preserve">
    <value>CP</value>
  </data>
  <data name="sSelectAsset" xml:space="preserve">
    <value>Select asset</value>
  </data>
  <data name="sSelectClip" xml:space="preserve">
    <value>Select clip</value>
  </data>
  <data name="sClass" xml:space="preserve">
    <value>Class</value>
  </data>
  <data name="sClip" xml:space="preserve">
    <value>Clip</value>
  </data>
  <data name="sClips" xml:space="preserve">
    <value>Clips</value>
  </data>
  <data name="sClockFace" xml:space="preserve">
    <value>clockface</value>
  </data>
  <data name="sCrawl" xml:space="preserve">
    <value>Crawl</value>
  </data>
  <data name="sCrawls" xml:space="preserve">
    <value>Crawls</value>
  </data>
  <data name="sCues" xml:space="preserve">
    <value>Cues</value>
  </data>
  <data name="sCuesClass" xml:space="preserve">
    <value>Cues class</value>
  </data>
  <data name="sCustomValues" xml:space="preserve">
    <value>Custom values</value>
  </data>
  <data name="sCutted" xml:space="preserve">
    <value>Cutted</value>
  </data>
  <data name="sDays" xml:space="preserve">
    <value>days</value>
  </data>
  <data name="sDesign" xml:space="preserve">
    <value>Design</value>
  </data>
  <data name="sDuration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="sEditArtistName" xml:space="preserve">
    <value>Edit artist name</value>
  </data>
  <data name="sEnd" xml:space="preserve">
    <value>End</value>
  </data>
  <data name="sEnded" xml:space="preserve">
    <value>Ended</value>
  </data>
  <data name="sEpisode" xml:space="preserve">
    <value>Episode</value>
  </data>
  <data name="sEqual" xml:space="preserve">
    <value>equal</value>
  </data>
  <data name="sErrorGettingFileTimings" xml:space="preserve">
    <value>File timings error</value>
  </data>
  <data name="sErrorReceiveArtistsList" xml:space="preserve">
    <value>Artists list receive error</value>
  </data>
  <data name="sErrorReceiveStylesList" xml:space="preserve">
    <value>Styles list receive error</value>
  </data>
  <data name="sEventStart" xml:space="preserve">
    <value>event start</value>
  </data>
  <data name="sFileID" xml:space="preserve">
    <value>File ID</value>
  </data>
  <data name="sFinishing" xml:space="preserve">
    <value>finishing</value>
  </data>
  <data name="sFirst" xml:space="preserve">
    <value>First</value>
  </data>
  <data name="sFor" xml:space="preserve">
    <value>for</value>
  </data>
  <data name="sFormat" xml:space="preserve">
    <value>Format</value>
  </data>
  <data name="sFramesQty" xml:space="preserve">
    <value>frames qty</value>
  </data>
  <data name="sGrid" xml:space="preserve">
    <value>Grid</value>
  </data>
  <data name="sHours" xml:space="preserve">
    <value>hours</value>
  </data>
  <data name="sInsert" xml:space="preserve">
    <value>Insert</value>
  </data>
  <data name="sItShouldBeFixedWith" xml:space="preserve">
    <value>it should be fixed with</value>
  </data>
  <data name="sLess" xml:space="preserve">
    <value>less</value>
  </data>
  <data name="sLine1" xml:space="preserve">
    <value>Line1</value>
  </data>
  <data name="sLine2" xml:space="preserve">
    <value>Line2</value>
  </data>
  <data name="sMedia" xml:space="preserve">
    <value>Media</value>
  </data>
  <data name="sMessages" xml:space="preserve">
    <value>Messages</value>
  </data>
  <data name="sMore" xml:space="preserve">
    <value>more</value>
  </data>
  <data name="sNextItemsWereNotAdded" xml:space="preserve">
    <value>Next items were not added:</value>
  </data>
  <data name="sServerFilesPath" xml:space="preserve">
    <value>Server files path:</value>
  </data>
  <data name="sNoticeTemplateButton1" xml:space="preserve">
    <value>Are you sure you want to reset prepared effect?</value>
  </data>
  <data name="sOnAir" xml:space="preserve">
    <value>On air</value>
  </data>
  <data name="sPalette" xml:space="preserve">
    <value>Palette</value>
  </data>
  <data name="sSettingAssetsParent" xml:space="preserve">
    <value>Setting assets parent</value>
  </data>
  <data name="sParentAssetID" xml:space="preserve">
    <value>Enter parent asset ID:</value>
  </data>
  <data name="sRemovingAssetsParent" xml:space="preserve">
    <value>Removing assets' parent</value>
  </data>
  <data name="sPart" xml:space="preserve">
    <value>Part</value>
  </data>
  <data name="sPersons" xml:space="preserve">
    <value>Persons</value>
  </data>
  <data name="sPersonSearch" xml:space="preserve">
    <value>person search</value>
  </data>
  <data name="sPlaylist" xml:space="preserve">
    <value>Playlist</value>
  </data>
  <data name="sPlaylistArchive" xml:space="preserve">
    <value>Playlist archive</value>
  </data>
  <data name="sPlaylistImport" xml:space="preserve">
    <value>playlist import</value>
  </data>
  <data name="sPlaylistItemProperties" xml:space="preserve">
    <value>playlist item properties</value>
  </data>
  <data name="sPlaylistItemsMove" xml:space="preserve">
    <value>playlist items move</value>
  </data>
  <data name="sPlaylistsIntegration" xml:space="preserve">
    <value>playlists integration</value>
  </data>
  <data name="sPossessor" xml:space="preserve">
    <value>Possessor</value>
  </data>
  <data name="sProgram" xml:space="preserve">
    <value>Program</value>
  </data>
  <data name="sPrograms" xml:space="preserve">
    <value>Programs</value>
  </data>
  <data name="sProgramType" xml:space="preserve">
    <value>Program type</value>
  </data>
  <data name="sPromo" xml:space="preserve">
    <value>Promo</value>
  </data>
  <data name="sQuality" xml:space="preserve">
    <value>Quality</value>
  </data>
  <data name="sRecalculate" xml:space="preserve">
    <value>Recalculate</value>
  </data>
  <data name="sRecalculateTimings" xml:space="preserve">
    <value>recalculate timings</value>
  </data>
  <data name="sRecalculation" xml:space="preserve">
    <value>Recalculation</value>
  </data>
  <data name="sRefreshPlaylist" xml:space="preserve">
    <value>Refresh playlist</value>
  </data>
  <data name="sRemix" xml:space="preserve">
    <value>Remix</value>
  </data>
  <data name="sRotation" xml:space="preserve">
    <value>Rotation</value>
  </data>
  <data name="sSec" xml:space="preserve">
    <value>Sec</value>
  </data>
  <data name="sSecond" xml:space="preserve">
    <value>Second</value>
  </data>
  <data name="sSequence" xml:space="preserve">
    <value>Sequence</value>
  </data>
  <data name="sSeries" xml:space="preserve">
    <value>Series</value>
  </data>
  <data name="sSetParent" xml:space="preserve">
    <value>set parent</value>
  </data>
  <data name="sSong" xml:space="preserve">
    <value>Song</value>
  </data>
  <data name="sSound" xml:space="preserve">
    <value>Sound</value>
  </data>
  <data name="sStart" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="sStatistics" xml:space="preserve">
    <value>Statistics</value>
  </data>
  <data name="sStop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="sStorage" xml:space="preserve">
    <value>Storage</value>
  </data>
  <data name="sStyles" xml:space="preserve">
    <value>Styles</value>
  </data>
  <data name="sStylesMissing" xml:space="preserve">
    <value>Styles missing</value>
  </data>
  <data name="sTemplateName" xml:space="preserve">
    <value>Template name</value>
  </data>
  <data name="sTemplates" xml:space="preserve">
    <value>Templates</value>
  </data>
  <data name="sThird" xml:space="preserve">
    <value>Third</value>
  </data>
  <data name="sTimings" xml:space="preserve">
    <value>Timings</value>
  </data>
  <data name="sTrailers" xml:space="preserve">
    <value>Trailers</value>
  </data>
  <data name="sUnsetParent" xml:space="preserve">
    <value>unset parent</value>
  </data>
  <data name="sUploadedFilesAnalyzing" xml:space="preserve">
    <value>proccessing uploaded files</value>
  </data>
  <data name="sErrorLiveIsMissing" xml:space="preserve">
    <value>There is no live</value>
  </data>
  <data name="sErrorDBInteract1" xml:space="preserve">
    <value>undefined status</value>
  </data>
  <data name="sErrorDBInteract2" xml:space="preserve">
    <value>wrong status</value>
  </data>
  <data name="sErrorDBInteract3" xml:space="preserve">
    <value>SCR shift adding error</value>
  </data>
  <data name="sErrorDBInteract4" xml:space="preserve">
    <value>SCR shift starting error</value>
  </data>
  <data name="sErrorDBInteract5" xml:space="preserve">
    <value>SCR shift stopping error</value>
  </data>
  <data name="sAdvertisementBlock" xml:space="preserve">
    <value>AdvertisementBlock</value>
  </data>
  <data name="sChannel" xml:space="preserve">
    <value>Channel</value>
  </data>
  <data name="sChat" xml:space="preserve">
    <value>Chat</value>
  </data>
  <data name="sCue" xml:space="preserve">
    <value>Cue</value>
  </data>
  <data name="sCurrentItem" xml:space="preserve">
    <value>Current item</value>
  </data>
  <data name="sFontName" xml:space="preserve">
    <value>Font name</value>
  </data>
  <data name="sFontSize" xml:space="preserve">
    <value>Font size</value>
  </data>
  <data name="sLeft" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="sLive" xml:space="preserve">
    <value>Live</value>
  </data>
  <data name="sLogo" xml:space="preserve">
    <value>Logo</value>
  </data>
  <data name="sPhoto" xml:space="preserve">
    <value>Photo</value>
  </data>
  <data name="sSpeed" xml:space="preserve">
    <value>Speed</value>
  </data>
  <data name="sStartTime" xml:space="preserve">
    <value>Start time</value>
  </data>
  <data name="sVideo" xml:space="preserve">
    <value>Video</value>
  </data>
  <data name="sErrorReceiveAssetsList" xml:space="preserve">
    <value>Assets list receive error</value>
  </data>
  <data name="sPlug" xml:space="preserve">
    <value>Plug</value>
  </data>
  <data name="sFiles" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="sBumper" xml:space="preserve">
    <value>Bumper</value>
  </data>
  <data name="sTrailer" xml:space="preserve">
    <value>Trailer</value>
  </data>
  <data name="sMix" xml:space="preserve">
    <value>Mix</value>
  </data>
</root>