//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace scr.services.ingenie.prompter {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://replica/ig/services/Prompter.asmx", ConfigurationName="services.ingenie.prompter.PrompterSoap")]
    public interface PrompterSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/ig/services/Prompter.asmx/Prepare", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginPrepare(string sTemplateName, scr.services.ingenie.prompter.DynamicValue[] ahDinamicValues, System.AsyncCallback callback, object asyncState);
        
        scr.services.ingenie.prompter.PrompterPrepareResult EndPrepare(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/ig/services/Prompter.asmx/Start", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginStart(long nID, System.AsyncCallback callback, object asyncState);
        
        void EndStart(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/ig/services/Prompter.asmx/Stop", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginStop(long nID, System.AsyncCallback callback, object asyncState);
        
        void EndStop(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/ig/services/Prompter.asmx/OnOffScreenGet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginOnOffScreenGet(long nID, System.AsyncCallback callback, object asyncState);
        
        int[] EndOnOffScreenGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/ig/services/Prompter.asmx/RollSpeedSet", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRollSpeedSet(short nSpeed, long nID, System.AsyncCallback callback, object asyncState);
        
        void EndRollSpeedSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/ig/services/Prompter.asmx/RestartFrom", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginRestartFrom(int nLine, long nID, System.AsyncCallback callback, object asyncState);
        
        void EndRestartFrom(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/ig/services/Prompter.asmx/Init", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginInit(ulong nClientBrowserID, System.AsyncCallback callback, object asyncState);
        
        string EndInit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/ig/services/Prompter.asmx/Ping", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginPing(System.AsyncCallback callback, object asyncState);
        
        void EndPing(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/ig/services/Prompter.asmx/ItemsUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginItemsUpdate(scr.services.ingenie.prompter.Item[] aItems, System.AsyncCallback callback, object asyncState);
        
        scr.services.ingenie.prompter.Item[] EndItemsUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/ig/services/Prompter.asmx/ItemDelete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginItemDelete(scr.services.ingenie.prompter.Item cItem, System.AsyncCallback callback, object asyncState);
        
        bool EndItemDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/ig/services/Prompter.asmx/ItemPrepare", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginItemPrepare(scr.services.ingenie.prompter.Item cItem, System.AsyncCallback callback, object asyncState);
        
        bool EndItemPrepare(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/ig/services/Prompter.asmx/ItemStart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginItemStart(scr.services.ingenie.prompter.Item cItem, System.AsyncCallback callback, object asyncState);
        
        bool EndItemStart(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/ig/services/Prompter.asmx/ItemStop", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginItemStop(scr.services.ingenie.prompter.Item cItem, System.AsyncCallback callback, object asyncState);
        
        bool EndItemStop(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/ig/services/Prompter.asmx/WriteError", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginWriteError(string sEx, System.AsyncCallback callback, object asyncState);
        
        void EndWriteError(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/ig/services/Prompter.asmx/WriteNotice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginWriteNotice(string sMsg, System.AsyncCallback callback, object asyncState);
        
        void EndWriteNotice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/ig/services/Prompter.asmx/DeviceDownStreamKeyerDisable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDeviceDownStreamKeyerDisable(System.AsyncCallback callback, object asyncState);
        
        void EndDeviceDownStreamKeyerDisable(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/ig/services/Prompter.asmx/DeviceDownStreamKeyerEnable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.IAsyncResult BeginDeviceDownStreamKeyerEnable(byte nLevel, bool bInternal, System.AsyncCallback callback, object asyncState);
        
        void EndDeviceDownStreamKeyerEnable(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://replica/ig/services/Prompter.asmx")]
    public partial class DynamicValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string sNameField;
        
        private string sValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string sName {
            get {
                return this.sNameField;
            }
            set {
                this.sNameField = value;
                this.RaisePropertyChanged("sName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string sValue {
            get {
                return this.sValueField;
            }
            set {
                this.sValueField = value;
                this.RaisePropertyChanged("sValue");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://replica/ig/services/Prompter.asmx")]
    public abstract partial class Item : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ulong nIDField;
        
        private string sPresetField;
        
        private string sCurrentClassField;
        
        private System.DateTime dtStatusChangedField;
        
        private Status eStatusField;
        
        private string sInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ulong nID {
            get {
                return this.nIDField;
            }
            set {
                this.nIDField = value;
                this.RaisePropertyChanged("nID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string sPreset {
            get {
                return this.sPresetField;
            }
            set {
                this.sPresetField = value;
                this.RaisePropertyChanged("sPreset");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string sCurrentClass {
            get {
                return this.sCurrentClassField;
            }
            set {
                this.sCurrentClassField = value;
                this.RaisePropertyChanged("sCurrentClass");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime dtStatusChanged {
            get {
                return this.dtStatusChangedField;
            }
            set {
                this.dtStatusChangedField = value;
                this.RaisePropertyChanged("dtStatusChanged");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public Status eStatus {
            get {
                return this.eStatusField;
            }
            set {
                this.eStatusField = value;
                this.RaisePropertyChanged("eStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string sInfo {
            get {
                return this.sInfoField;
            }
            set {
                this.sInfoField = value;
                this.RaisePropertyChanged("sInfo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://replica/ig/services/Prompter.asmx")]
    public enum Status {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Idle,
        
        /// <remarks/>
        Prepared,
        
        /// <remarks/>
        Started,
        
        /// <remarks/>
        Stopped,
        
        /// <remarks/>
        Error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://replica/ig/services/Prompter.asmx")]
    public partial class PrompterPrepareResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int nTemplatesHashCodeField;
        
        private string[] aSplittedTextField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int nTemplatesHashCode {
            get {
                return this.nTemplatesHashCodeField;
            }
            set {
                this.nTemplatesHashCodeField = value;
                this.RaisePropertyChanged("nTemplatesHashCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] aSplittedText {
            get {
                return this.aSplittedTextField;
            }
            set {
                this.aSplittedTextField = value;
                this.RaisePropertyChanged("aSplittedText");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PrompterSoapChannel : scr.services.ingenie.prompter.PrompterSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrepareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PrepareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public scr.services.ingenie.prompter.PrompterPrepareResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((scr.services.ingenie.prompter.PrompterPrepareResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OnOffScreenGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OnOffScreenGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ItemsUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ItemsUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public scr.services.ingenie.prompter.Item[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((scr.services.ingenie.prompter.Item[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ItemDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ItemDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ItemPrepareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ItemPrepareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ItemStartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ItemStartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ItemStopCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ItemStopCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrompterSoapClient : System.ServiceModel.ClientBase<scr.services.ingenie.prompter.PrompterSoap>, scr.services.ingenie.prompter.PrompterSoap {
        
        private BeginOperationDelegate onBeginPrepareDelegate;
        
        private EndOperationDelegate onEndPrepareDelegate;
        
        private System.Threading.SendOrPostCallback onPrepareCompletedDelegate;
        
        private BeginOperationDelegate onBeginStartDelegate;
        
        private EndOperationDelegate onEndStartDelegate;
        
        private System.Threading.SendOrPostCallback onStartCompletedDelegate;
        
        private BeginOperationDelegate onBeginStopDelegate;
        
        private EndOperationDelegate onEndStopDelegate;
        
        private System.Threading.SendOrPostCallback onStopCompletedDelegate;
        
        private BeginOperationDelegate onBeginOnOffScreenGetDelegate;
        
        private EndOperationDelegate onEndOnOffScreenGetDelegate;
        
        private System.Threading.SendOrPostCallback onOnOffScreenGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginRollSpeedSetDelegate;
        
        private EndOperationDelegate onEndRollSpeedSetDelegate;
        
        private System.Threading.SendOrPostCallback onRollSpeedSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginRestartFromDelegate;
        
        private EndOperationDelegate onEndRestartFromDelegate;
        
        private System.Threading.SendOrPostCallback onRestartFromCompletedDelegate;
        
        private BeginOperationDelegate onBeginInitDelegate;
        
        private EndOperationDelegate onEndInitDelegate;
        
        private System.Threading.SendOrPostCallback onInitCompletedDelegate;
        
        private BeginOperationDelegate onBeginPingDelegate;
        
        private EndOperationDelegate onEndPingDelegate;
        
        private System.Threading.SendOrPostCallback onPingCompletedDelegate;
        
        private BeginOperationDelegate onBeginItemsUpdateDelegate;
        
        private EndOperationDelegate onEndItemsUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onItemsUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginItemDeleteDelegate;
        
        private EndOperationDelegate onEndItemDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onItemDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginItemPrepareDelegate;
        
        private EndOperationDelegate onEndItemPrepareDelegate;
        
        private System.Threading.SendOrPostCallback onItemPrepareCompletedDelegate;
        
        private BeginOperationDelegate onBeginItemStartDelegate;
        
        private EndOperationDelegate onEndItemStartDelegate;
        
        private System.Threading.SendOrPostCallback onItemStartCompletedDelegate;
        
        private BeginOperationDelegate onBeginItemStopDelegate;
        
        private EndOperationDelegate onEndItemStopDelegate;
        
        private System.Threading.SendOrPostCallback onItemStopCompletedDelegate;
        
        private BeginOperationDelegate onBeginWriteErrorDelegate;
        
        private EndOperationDelegate onEndWriteErrorDelegate;
        
        private System.Threading.SendOrPostCallback onWriteErrorCompletedDelegate;
        
        private BeginOperationDelegate onBeginWriteNoticeDelegate;
        
        private EndOperationDelegate onEndWriteNoticeDelegate;
        
        private System.Threading.SendOrPostCallback onWriteNoticeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeviceDownStreamKeyerDisableDelegate;
        
        private EndOperationDelegate onEndDeviceDownStreamKeyerDisableDelegate;
        
        private System.Threading.SendOrPostCallback onDeviceDownStreamKeyerDisableCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeviceDownStreamKeyerEnableDelegate;
        
        private EndOperationDelegate onEndDeviceDownStreamKeyerEnableDelegate;
        
        private System.Threading.SendOrPostCallback onDeviceDownStreamKeyerEnableCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PrompterSoapClient() {
        }
        
        public PrompterSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PrompterSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrompterSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrompterSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<PrepareCompletedEventArgs> PrepareCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> StartCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> StopCompleted;
        
        public event System.EventHandler<OnOffScreenGetCompletedEventArgs> OnOffScreenGetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RollSpeedSetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RestartFromCompleted;
        
        public event System.EventHandler<InitCompletedEventArgs> InitCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PingCompleted;
        
        public event System.EventHandler<ItemsUpdateCompletedEventArgs> ItemsUpdateCompleted;
        
        public event System.EventHandler<ItemDeleteCompletedEventArgs> ItemDeleteCompleted;
        
        public event System.EventHandler<ItemPrepareCompletedEventArgs> ItemPrepareCompleted;
        
        public event System.EventHandler<ItemStartCompletedEventArgs> ItemStartCompleted;
        
        public event System.EventHandler<ItemStopCompletedEventArgs> ItemStopCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> WriteErrorCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> WriteNoticeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeviceDownStreamKeyerDisableCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeviceDownStreamKeyerEnableCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult scr.services.ingenie.prompter.PrompterSoap.BeginPrepare(string sTemplateName, scr.services.ingenie.prompter.DynamicValue[] ahDinamicValues, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrepare(sTemplateName, ahDinamicValues, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        scr.services.ingenie.prompter.PrompterPrepareResult scr.services.ingenie.prompter.PrompterSoap.EndPrepare(System.IAsyncResult result) {
            return base.Channel.EndPrepare(result);
        }
        
        private System.IAsyncResult OnBeginPrepare(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sTemplateName = ((string)(inValues[0]));
            scr.services.ingenie.prompter.DynamicValue[] ahDinamicValues = ((scr.services.ingenie.prompter.DynamicValue[])(inValues[1]));
            return ((scr.services.ingenie.prompter.PrompterSoap)(this)).BeginPrepare(sTemplateName, ahDinamicValues, callback, asyncState);
        }
        
        private object[] OnEndPrepare(System.IAsyncResult result) {
            scr.services.ingenie.prompter.PrompterPrepareResult retVal = ((scr.services.ingenie.prompter.PrompterSoap)(this)).EndPrepare(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPrepareCompleted(object state) {
            if ((this.PrepareCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrepareCompleted(this, new PrepareCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrepareAsync(string sTemplateName, scr.services.ingenie.prompter.DynamicValue[] ahDinamicValues) {
            this.PrepareAsync(sTemplateName, ahDinamicValues, null);
        }
        
        public void PrepareAsync(string sTemplateName, scr.services.ingenie.prompter.DynamicValue[] ahDinamicValues, object userState) {
            if ((this.onBeginPrepareDelegate == null)) {
                this.onBeginPrepareDelegate = new BeginOperationDelegate(this.OnBeginPrepare);
            }
            if ((this.onEndPrepareDelegate == null)) {
                this.onEndPrepareDelegate = new EndOperationDelegate(this.OnEndPrepare);
            }
            if ((this.onPrepareCompletedDelegate == null)) {
                this.onPrepareCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrepareCompleted);
            }
            base.InvokeAsync(this.onBeginPrepareDelegate, new object[] {
                        sTemplateName,
                        ahDinamicValues}, this.onEndPrepareDelegate, this.onPrepareCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult scr.services.ingenie.prompter.PrompterSoap.BeginStart(long nID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStart(nID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void scr.services.ingenie.prompter.PrompterSoap.EndStart(System.IAsyncResult result) {
            base.Channel.EndStart(result);
        }
        
        private System.IAsyncResult OnBeginStart(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long nID = ((long)(inValues[0]));
            return ((scr.services.ingenie.prompter.PrompterSoap)(this)).BeginStart(nID, callback, asyncState);
        }
        
        private object[] OnEndStart(System.IAsyncResult result) {
            ((scr.services.ingenie.prompter.PrompterSoap)(this)).EndStart(result);
            return null;
        }
        
        private void OnStartCompleted(object state) {
            if ((this.StartCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StartCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StartAsync(long nID) {
            this.StartAsync(nID, null);
        }
        
        public void StartAsync(long nID, object userState) {
            if ((this.onBeginStartDelegate == null)) {
                this.onBeginStartDelegate = new BeginOperationDelegate(this.OnBeginStart);
            }
            if ((this.onEndStartDelegate == null)) {
                this.onEndStartDelegate = new EndOperationDelegate(this.OnEndStart);
            }
            if ((this.onStartCompletedDelegate == null)) {
                this.onStartCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartCompleted);
            }
            base.InvokeAsync(this.onBeginStartDelegate, new object[] {
                        nID}, this.onEndStartDelegate, this.onStartCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult scr.services.ingenie.prompter.PrompterSoap.BeginStop(long nID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStop(nID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void scr.services.ingenie.prompter.PrompterSoap.EndStop(System.IAsyncResult result) {
            base.Channel.EndStop(result);
        }
        
        private System.IAsyncResult OnBeginStop(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long nID = ((long)(inValues[0]));
            return ((scr.services.ingenie.prompter.PrompterSoap)(this)).BeginStop(nID, callback, asyncState);
        }
        
        private object[] OnEndStop(System.IAsyncResult result) {
            ((scr.services.ingenie.prompter.PrompterSoap)(this)).EndStop(result);
            return null;
        }
        
        private void OnStopCompleted(object state) {
            if ((this.StopCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StopCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StopAsync(long nID) {
            this.StopAsync(nID, null);
        }
        
        public void StopAsync(long nID, object userState) {
            if ((this.onBeginStopDelegate == null)) {
                this.onBeginStopDelegate = new BeginOperationDelegate(this.OnBeginStop);
            }
            if ((this.onEndStopDelegate == null)) {
                this.onEndStopDelegate = new EndOperationDelegate(this.OnEndStop);
            }
            if ((this.onStopCompletedDelegate == null)) {
                this.onStopCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStopCompleted);
            }
            base.InvokeAsync(this.onBeginStopDelegate, new object[] {
                        nID}, this.onEndStopDelegate, this.onStopCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult scr.services.ingenie.prompter.PrompterSoap.BeginOnOffScreenGet(long nID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOnOffScreenGet(nID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int[] scr.services.ingenie.prompter.PrompterSoap.EndOnOffScreenGet(System.IAsyncResult result) {
            return base.Channel.EndOnOffScreenGet(result);
        }
        
        private System.IAsyncResult OnBeginOnOffScreenGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long nID = ((long)(inValues[0]));
            return ((scr.services.ingenie.prompter.PrompterSoap)(this)).BeginOnOffScreenGet(nID, callback, asyncState);
        }
        
        private object[] OnEndOnOffScreenGet(System.IAsyncResult result) {
            int[] retVal = ((scr.services.ingenie.prompter.PrompterSoap)(this)).EndOnOffScreenGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOnOffScreenGetCompleted(object state) {
            if ((this.OnOffScreenGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OnOffScreenGetCompleted(this, new OnOffScreenGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OnOffScreenGetAsync(long nID) {
            this.OnOffScreenGetAsync(nID, null);
        }
        
        public void OnOffScreenGetAsync(long nID, object userState) {
            if ((this.onBeginOnOffScreenGetDelegate == null)) {
                this.onBeginOnOffScreenGetDelegate = new BeginOperationDelegate(this.OnBeginOnOffScreenGet);
            }
            if ((this.onEndOnOffScreenGetDelegate == null)) {
                this.onEndOnOffScreenGetDelegate = new EndOperationDelegate(this.OnEndOnOffScreenGet);
            }
            if ((this.onOnOffScreenGetCompletedDelegate == null)) {
                this.onOnOffScreenGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOnOffScreenGetCompleted);
            }
            base.InvokeAsync(this.onBeginOnOffScreenGetDelegate, new object[] {
                        nID}, this.onEndOnOffScreenGetDelegate, this.onOnOffScreenGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult scr.services.ingenie.prompter.PrompterSoap.BeginRollSpeedSet(short nSpeed, long nID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRollSpeedSet(nSpeed, nID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void scr.services.ingenie.prompter.PrompterSoap.EndRollSpeedSet(System.IAsyncResult result) {
            base.Channel.EndRollSpeedSet(result);
        }
        
        private System.IAsyncResult OnBeginRollSpeedSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            short nSpeed = ((short)(inValues[0]));
            long nID = ((long)(inValues[1]));
            return ((scr.services.ingenie.prompter.PrompterSoap)(this)).BeginRollSpeedSet(nSpeed, nID, callback, asyncState);
        }
        
        private object[] OnEndRollSpeedSet(System.IAsyncResult result) {
            ((scr.services.ingenie.prompter.PrompterSoap)(this)).EndRollSpeedSet(result);
            return null;
        }
        
        private void OnRollSpeedSetCompleted(object state) {
            if ((this.RollSpeedSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RollSpeedSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RollSpeedSetAsync(short nSpeed, long nID) {
            this.RollSpeedSetAsync(nSpeed, nID, null);
        }
        
        public void RollSpeedSetAsync(short nSpeed, long nID, object userState) {
            if ((this.onBeginRollSpeedSetDelegate == null)) {
                this.onBeginRollSpeedSetDelegate = new BeginOperationDelegate(this.OnBeginRollSpeedSet);
            }
            if ((this.onEndRollSpeedSetDelegate == null)) {
                this.onEndRollSpeedSetDelegate = new EndOperationDelegate(this.OnEndRollSpeedSet);
            }
            if ((this.onRollSpeedSetCompletedDelegate == null)) {
                this.onRollSpeedSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRollSpeedSetCompleted);
            }
            base.InvokeAsync(this.onBeginRollSpeedSetDelegate, new object[] {
                        nSpeed,
                        nID}, this.onEndRollSpeedSetDelegate, this.onRollSpeedSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult scr.services.ingenie.prompter.PrompterSoap.BeginRestartFrom(int nLine, long nID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRestartFrom(nLine, nID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void scr.services.ingenie.prompter.PrompterSoap.EndRestartFrom(System.IAsyncResult result) {
            base.Channel.EndRestartFrom(result);
        }
        
        private System.IAsyncResult OnBeginRestartFrom(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int nLine = ((int)(inValues[0]));
            long nID = ((long)(inValues[1]));
            return ((scr.services.ingenie.prompter.PrompterSoap)(this)).BeginRestartFrom(nLine, nID, callback, asyncState);
        }
        
        private object[] OnEndRestartFrom(System.IAsyncResult result) {
            ((scr.services.ingenie.prompter.PrompterSoap)(this)).EndRestartFrom(result);
            return null;
        }
        
        private void OnRestartFromCompleted(object state) {
            if ((this.RestartFromCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RestartFromCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RestartFromAsync(int nLine, long nID) {
            this.RestartFromAsync(nLine, nID, null);
        }
        
        public void RestartFromAsync(int nLine, long nID, object userState) {
            if ((this.onBeginRestartFromDelegate == null)) {
                this.onBeginRestartFromDelegate = new BeginOperationDelegate(this.OnBeginRestartFrom);
            }
            if ((this.onEndRestartFromDelegate == null)) {
                this.onEndRestartFromDelegate = new EndOperationDelegate(this.OnEndRestartFrom);
            }
            if ((this.onRestartFromCompletedDelegate == null)) {
                this.onRestartFromCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRestartFromCompleted);
            }
            base.InvokeAsync(this.onBeginRestartFromDelegate, new object[] {
                        nLine,
                        nID}, this.onEndRestartFromDelegate, this.onRestartFromCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult scr.services.ingenie.prompter.PrompterSoap.BeginInit(ulong nClientBrowserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInit(nClientBrowserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string scr.services.ingenie.prompter.PrompterSoap.EndInit(System.IAsyncResult result) {
            return base.Channel.EndInit(result);
        }
        
        private System.IAsyncResult OnBeginInit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ulong nClientBrowserID = ((ulong)(inValues[0]));
            return ((scr.services.ingenie.prompter.PrompterSoap)(this)).BeginInit(nClientBrowserID, callback, asyncState);
        }
        
        private object[] OnEndInit(System.IAsyncResult result) {
            string retVal = ((scr.services.ingenie.prompter.PrompterSoap)(this)).EndInit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInitCompleted(object state) {
            if ((this.InitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InitCompleted(this, new InitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InitAsync(ulong nClientBrowserID) {
            this.InitAsync(nClientBrowserID, null);
        }
        
        public void InitAsync(ulong nClientBrowserID, object userState) {
            if ((this.onBeginInitDelegate == null)) {
                this.onBeginInitDelegate = new BeginOperationDelegate(this.OnBeginInit);
            }
            if ((this.onEndInitDelegate == null)) {
                this.onEndInitDelegate = new EndOperationDelegate(this.OnEndInit);
            }
            if ((this.onInitCompletedDelegate == null)) {
                this.onInitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInitCompleted);
            }
            base.InvokeAsync(this.onBeginInitDelegate, new object[] {
                        nClientBrowserID}, this.onEndInitDelegate, this.onInitCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult scr.services.ingenie.prompter.PrompterSoap.BeginPing(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPing(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void scr.services.ingenie.prompter.PrompterSoap.EndPing(System.IAsyncResult result) {
            base.Channel.EndPing(result);
        }
        
        private System.IAsyncResult OnBeginPing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((scr.services.ingenie.prompter.PrompterSoap)(this)).BeginPing(callback, asyncState);
        }
        
        private object[] OnEndPing(System.IAsyncResult result) {
            ((scr.services.ingenie.prompter.PrompterSoap)(this)).EndPing(result);
            return null;
        }
        
        private void OnPingCompleted(object state) {
            if ((this.PingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PingAsync() {
            this.PingAsync(null);
        }
        
        public void PingAsync(object userState) {
            if ((this.onBeginPingDelegate == null)) {
                this.onBeginPingDelegate = new BeginOperationDelegate(this.OnBeginPing);
            }
            if ((this.onEndPingDelegate == null)) {
                this.onEndPingDelegate = new EndOperationDelegate(this.OnEndPing);
            }
            if ((this.onPingCompletedDelegate == null)) {
                this.onPingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPingCompleted);
            }
            base.InvokeAsync(this.onBeginPingDelegate, null, this.onEndPingDelegate, this.onPingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult scr.services.ingenie.prompter.PrompterSoap.BeginItemsUpdate(scr.services.ingenie.prompter.Item[] aItems, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginItemsUpdate(aItems, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        scr.services.ingenie.prompter.Item[] scr.services.ingenie.prompter.PrompterSoap.EndItemsUpdate(System.IAsyncResult result) {
            return base.Channel.EndItemsUpdate(result);
        }
        
        private System.IAsyncResult OnBeginItemsUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            scr.services.ingenie.prompter.Item[] aItems = ((scr.services.ingenie.prompter.Item[])(inValues[0]));
            return ((scr.services.ingenie.prompter.PrompterSoap)(this)).BeginItemsUpdate(aItems, callback, asyncState);
        }
        
        private object[] OnEndItemsUpdate(System.IAsyncResult result) {
            scr.services.ingenie.prompter.Item[] retVal = ((scr.services.ingenie.prompter.PrompterSoap)(this)).EndItemsUpdate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnItemsUpdateCompleted(object state) {
            if ((this.ItemsUpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ItemsUpdateCompleted(this, new ItemsUpdateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ItemsUpdateAsync(scr.services.ingenie.prompter.Item[] aItems) {
            this.ItemsUpdateAsync(aItems, null);
        }
        
        public void ItemsUpdateAsync(scr.services.ingenie.prompter.Item[] aItems, object userState) {
            if ((this.onBeginItemsUpdateDelegate == null)) {
                this.onBeginItemsUpdateDelegate = new BeginOperationDelegate(this.OnBeginItemsUpdate);
            }
            if ((this.onEndItemsUpdateDelegate == null)) {
                this.onEndItemsUpdateDelegate = new EndOperationDelegate(this.OnEndItemsUpdate);
            }
            if ((this.onItemsUpdateCompletedDelegate == null)) {
                this.onItemsUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnItemsUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginItemsUpdateDelegate, new object[] {
                        aItems}, this.onEndItemsUpdateDelegate, this.onItemsUpdateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult scr.services.ingenie.prompter.PrompterSoap.BeginItemDelete(scr.services.ingenie.prompter.Item cItem, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginItemDelete(cItem, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool scr.services.ingenie.prompter.PrompterSoap.EndItemDelete(System.IAsyncResult result) {
            return base.Channel.EndItemDelete(result);
        }
        
        private System.IAsyncResult OnBeginItemDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            scr.services.ingenie.prompter.Item cItem = ((scr.services.ingenie.prompter.Item)(inValues[0]));
            return ((scr.services.ingenie.prompter.PrompterSoap)(this)).BeginItemDelete(cItem, callback, asyncState);
        }
        
        private object[] OnEndItemDelete(System.IAsyncResult result) {
            bool retVal = ((scr.services.ingenie.prompter.PrompterSoap)(this)).EndItemDelete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnItemDeleteCompleted(object state) {
            if ((this.ItemDeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ItemDeleteCompleted(this, new ItemDeleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ItemDeleteAsync(scr.services.ingenie.prompter.Item cItem) {
            this.ItemDeleteAsync(cItem, null);
        }
        
        public void ItemDeleteAsync(scr.services.ingenie.prompter.Item cItem, object userState) {
            if ((this.onBeginItemDeleteDelegate == null)) {
                this.onBeginItemDeleteDelegate = new BeginOperationDelegate(this.OnBeginItemDelete);
            }
            if ((this.onEndItemDeleteDelegate == null)) {
                this.onEndItemDeleteDelegate = new EndOperationDelegate(this.OnEndItemDelete);
            }
            if ((this.onItemDeleteCompletedDelegate == null)) {
                this.onItemDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnItemDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginItemDeleteDelegate, new object[] {
                        cItem}, this.onEndItemDeleteDelegate, this.onItemDeleteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult scr.services.ingenie.prompter.PrompterSoap.BeginItemPrepare(scr.services.ingenie.prompter.Item cItem, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginItemPrepare(cItem, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool scr.services.ingenie.prompter.PrompterSoap.EndItemPrepare(System.IAsyncResult result) {
            return base.Channel.EndItemPrepare(result);
        }
        
        private System.IAsyncResult OnBeginItemPrepare(object[] inValues, System.AsyncCallback callback, object asyncState) {
            scr.services.ingenie.prompter.Item cItem = ((scr.services.ingenie.prompter.Item)(inValues[0]));
            return ((scr.services.ingenie.prompter.PrompterSoap)(this)).BeginItemPrepare(cItem, callback, asyncState);
        }
        
        private object[] OnEndItemPrepare(System.IAsyncResult result) {
            bool retVal = ((scr.services.ingenie.prompter.PrompterSoap)(this)).EndItemPrepare(result);
            return new object[] {
                    retVal};
        }
        
        private void OnItemPrepareCompleted(object state) {
            if ((this.ItemPrepareCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ItemPrepareCompleted(this, new ItemPrepareCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ItemPrepareAsync(scr.services.ingenie.prompter.Item cItem) {
            this.ItemPrepareAsync(cItem, null);
        }
        
        public void ItemPrepareAsync(scr.services.ingenie.prompter.Item cItem, object userState) {
            if ((this.onBeginItemPrepareDelegate == null)) {
                this.onBeginItemPrepareDelegate = new BeginOperationDelegate(this.OnBeginItemPrepare);
            }
            if ((this.onEndItemPrepareDelegate == null)) {
                this.onEndItemPrepareDelegate = new EndOperationDelegate(this.OnEndItemPrepare);
            }
            if ((this.onItemPrepareCompletedDelegate == null)) {
                this.onItemPrepareCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnItemPrepareCompleted);
            }
            base.InvokeAsync(this.onBeginItemPrepareDelegate, new object[] {
                        cItem}, this.onEndItemPrepareDelegate, this.onItemPrepareCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult scr.services.ingenie.prompter.PrompterSoap.BeginItemStart(scr.services.ingenie.prompter.Item cItem, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginItemStart(cItem, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool scr.services.ingenie.prompter.PrompterSoap.EndItemStart(System.IAsyncResult result) {
            return base.Channel.EndItemStart(result);
        }
        
        private System.IAsyncResult OnBeginItemStart(object[] inValues, System.AsyncCallback callback, object asyncState) {
            scr.services.ingenie.prompter.Item cItem = ((scr.services.ingenie.prompter.Item)(inValues[0]));
            return ((scr.services.ingenie.prompter.PrompterSoap)(this)).BeginItemStart(cItem, callback, asyncState);
        }
        
        private object[] OnEndItemStart(System.IAsyncResult result) {
            bool retVal = ((scr.services.ingenie.prompter.PrompterSoap)(this)).EndItemStart(result);
            return new object[] {
                    retVal};
        }
        
        private void OnItemStartCompleted(object state) {
            if ((this.ItemStartCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ItemStartCompleted(this, new ItemStartCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ItemStartAsync(scr.services.ingenie.prompter.Item cItem) {
            this.ItemStartAsync(cItem, null);
        }
        
        public void ItemStartAsync(scr.services.ingenie.prompter.Item cItem, object userState) {
            if ((this.onBeginItemStartDelegate == null)) {
                this.onBeginItemStartDelegate = new BeginOperationDelegate(this.OnBeginItemStart);
            }
            if ((this.onEndItemStartDelegate == null)) {
                this.onEndItemStartDelegate = new EndOperationDelegate(this.OnEndItemStart);
            }
            if ((this.onItemStartCompletedDelegate == null)) {
                this.onItemStartCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnItemStartCompleted);
            }
            base.InvokeAsync(this.onBeginItemStartDelegate, new object[] {
                        cItem}, this.onEndItemStartDelegate, this.onItemStartCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult scr.services.ingenie.prompter.PrompterSoap.BeginItemStop(scr.services.ingenie.prompter.Item cItem, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginItemStop(cItem, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool scr.services.ingenie.prompter.PrompterSoap.EndItemStop(System.IAsyncResult result) {
            return base.Channel.EndItemStop(result);
        }
        
        private System.IAsyncResult OnBeginItemStop(object[] inValues, System.AsyncCallback callback, object asyncState) {
            scr.services.ingenie.prompter.Item cItem = ((scr.services.ingenie.prompter.Item)(inValues[0]));
            return ((scr.services.ingenie.prompter.PrompterSoap)(this)).BeginItemStop(cItem, callback, asyncState);
        }
        
        private object[] OnEndItemStop(System.IAsyncResult result) {
            bool retVal = ((scr.services.ingenie.prompter.PrompterSoap)(this)).EndItemStop(result);
            return new object[] {
                    retVal};
        }
        
        private void OnItemStopCompleted(object state) {
            if ((this.ItemStopCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ItemStopCompleted(this, new ItemStopCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ItemStopAsync(scr.services.ingenie.prompter.Item cItem) {
            this.ItemStopAsync(cItem, null);
        }
        
        public void ItemStopAsync(scr.services.ingenie.prompter.Item cItem, object userState) {
            if ((this.onBeginItemStopDelegate == null)) {
                this.onBeginItemStopDelegate = new BeginOperationDelegate(this.OnBeginItemStop);
            }
            if ((this.onEndItemStopDelegate == null)) {
                this.onEndItemStopDelegate = new EndOperationDelegate(this.OnEndItemStop);
            }
            if ((this.onItemStopCompletedDelegate == null)) {
                this.onItemStopCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnItemStopCompleted);
            }
            base.InvokeAsync(this.onBeginItemStopDelegate, new object[] {
                        cItem}, this.onEndItemStopDelegate, this.onItemStopCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult scr.services.ingenie.prompter.PrompterSoap.BeginWriteError(string sEx, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWriteError(sEx, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void scr.services.ingenie.prompter.PrompterSoap.EndWriteError(System.IAsyncResult result) {
            base.Channel.EndWriteError(result);
        }
        
        private System.IAsyncResult OnBeginWriteError(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sEx = ((string)(inValues[0]));
            return ((scr.services.ingenie.prompter.PrompterSoap)(this)).BeginWriteError(sEx, callback, asyncState);
        }
        
        private object[] OnEndWriteError(System.IAsyncResult result) {
            ((scr.services.ingenie.prompter.PrompterSoap)(this)).EndWriteError(result);
            return null;
        }
        
        private void OnWriteErrorCompleted(object state) {
            if ((this.WriteErrorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WriteErrorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WriteErrorAsync(string sEx) {
            this.WriteErrorAsync(sEx, null);
        }
        
        public void WriteErrorAsync(string sEx, object userState) {
            if ((this.onBeginWriteErrorDelegate == null)) {
                this.onBeginWriteErrorDelegate = new BeginOperationDelegate(this.OnBeginWriteError);
            }
            if ((this.onEndWriteErrorDelegate == null)) {
                this.onEndWriteErrorDelegate = new EndOperationDelegate(this.OnEndWriteError);
            }
            if ((this.onWriteErrorCompletedDelegate == null)) {
                this.onWriteErrorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWriteErrorCompleted);
            }
            base.InvokeAsync(this.onBeginWriteErrorDelegate, new object[] {
                        sEx}, this.onEndWriteErrorDelegate, this.onWriteErrorCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult scr.services.ingenie.prompter.PrompterSoap.BeginWriteNotice(string sMsg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWriteNotice(sMsg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void scr.services.ingenie.prompter.PrompterSoap.EndWriteNotice(System.IAsyncResult result) {
            base.Channel.EndWriteNotice(result);
        }
        
        private System.IAsyncResult OnBeginWriteNotice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sMsg = ((string)(inValues[0]));
            return ((scr.services.ingenie.prompter.PrompterSoap)(this)).BeginWriteNotice(sMsg, callback, asyncState);
        }
        
        private object[] OnEndWriteNotice(System.IAsyncResult result) {
            ((scr.services.ingenie.prompter.PrompterSoap)(this)).EndWriteNotice(result);
            return null;
        }
        
        private void OnWriteNoticeCompleted(object state) {
            if ((this.WriteNoticeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WriteNoticeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WriteNoticeAsync(string sMsg) {
            this.WriteNoticeAsync(sMsg, null);
        }
        
        public void WriteNoticeAsync(string sMsg, object userState) {
            if ((this.onBeginWriteNoticeDelegate == null)) {
                this.onBeginWriteNoticeDelegate = new BeginOperationDelegate(this.OnBeginWriteNotice);
            }
            if ((this.onEndWriteNoticeDelegate == null)) {
                this.onEndWriteNoticeDelegate = new EndOperationDelegate(this.OnEndWriteNotice);
            }
            if ((this.onWriteNoticeCompletedDelegate == null)) {
                this.onWriteNoticeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWriteNoticeCompleted);
            }
            base.InvokeAsync(this.onBeginWriteNoticeDelegate, new object[] {
                        sMsg}, this.onEndWriteNoticeDelegate, this.onWriteNoticeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult scr.services.ingenie.prompter.PrompterSoap.BeginDeviceDownStreamKeyerDisable(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeviceDownStreamKeyerDisable(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void scr.services.ingenie.prompter.PrompterSoap.EndDeviceDownStreamKeyerDisable(System.IAsyncResult result) {
            base.Channel.EndDeviceDownStreamKeyerDisable(result);
        }
        
        private System.IAsyncResult OnBeginDeviceDownStreamKeyerDisable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((scr.services.ingenie.prompter.PrompterSoap)(this)).BeginDeviceDownStreamKeyerDisable(callback, asyncState);
        }
        
        private object[] OnEndDeviceDownStreamKeyerDisable(System.IAsyncResult result) {
            ((scr.services.ingenie.prompter.PrompterSoap)(this)).EndDeviceDownStreamKeyerDisable(result);
            return null;
        }
        
        private void OnDeviceDownStreamKeyerDisableCompleted(object state) {
            if ((this.DeviceDownStreamKeyerDisableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeviceDownStreamKeyerDisableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeviceDownStreamKeyerDisableAsync() {
            this.DeviceDownStreamKeyerDisableAsync(null);
        }
        
        public void DeviceDownStreamKeyerDisableAsync(object userState) {
            if ((this.onBeginDeviceDownStreamKeyerDisableDelegate == null)) {
                this.onBeginDeviceDownStreamKeyerDisableDelegate = new BeginOperationDelegate(this.OnBeginDeviceDownStreamKeyerDisable);
            }
            if ((this.onEndDeviceDownStreamKeyerDisableDelegate == null)) {
                this.onEndDeviceDownStreamKeyerDisableDelegate = new EndOperationDelegate(this.OnEndDeviceDownStreamKeyerDisable);
            }
            if ((this.onDeviceDownStreamKeyerDisableCompletedDelegate == null)) {
                this.onDeviceDownStreamKeyerDisableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeviceDownStreamKeyerDisableCompleted);
            }
            base.InvokeAsync(this.onBeginDeviceDownStreamKeyerDisableDelegate, null, this.onEndDeviceDownStreamKeyerDisableDelegate, this.onDeviceDownStreamKeyerDisableCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult scr.services.ingenie.prompter.PrompterSoap.BeginDeviceDownStreamKeyerEnable(byte nLevel, bool bInternal, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeviceDownStreamKeyerEnable(nLevel, bInternal, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void scr.services.ingenie.prompter.PrompterSoap.EndDeviceDownStreamKeyerEnable(System.IAsyncResult result) {
            base.Channel.EndDeviceDownStreamKeyerEnable(result);
        }
        
        private System.IAsyncResult OnBeginDeviceDownStreamKeyerEnable(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte nLevel = ((byte)(inValues[0]));
            bool bInternal = ((bool)(inValues[1]));
            return ((scr.services.ingenie.prompter.PrompterSoap)(this)).BeginDeviceDownStreamKeyerEnable(nLevel, bInternal, callback, asyncState);
        }
        
        private object[] OnEndDeviceDownStreamKeyerEnable(System.IAsyncResult result) {
            ((scr.services.ingenie.prompter.PrompterSoap)(this)).EndDeviceDownStreamKeyerEnable(result);
            return null;
        }
        
        private void OnDeviceDownStreamKeyerEnableCompleted(object state) {
            if ((this.DeviceDownStreamKeyerEnableCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeviceDownStreamKeyerEnableCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeviceDownStreamKeyerEnableAsync(byte nLevel, bool bInternal) {
            this.DeviceDownStreamKeyerEnableAsync(nLevel, bInternal, null);
        }
        
        public void DeviceDownStreamKeyerEnableAsync(byte nLevel, bool bInternal, object userState) {
            if ((this.onBeginDeviceDownStreamKeyerEnableDelegate == null)) {
                this.onBeginDeviceDownStreamKeyerEnableDelegate = new BeginOperationDelegate(this.OnBeginDeviceDownStreamKeyerEnable);
            }
            if ((this.onEndDeviceDownStreamKeyerEnableDelegate == null)) {
                this.onEndDeviceDownStreamKeyerEnableDelegate = new EndOperationDelegate(this.OnEndDeviceDownStreamKeyerEnable);
            }
            if ((this.onDeviceDownStreamKeyerEnableCompletedDelegate == null)) {
                this.onDeviceDownStreamKeyerEnableCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeviceDownStreamKeyerEnableCompleted);
            }
            base.InvokeAsync(this.onBeginDeviceDownStreamKeyerEnableDelegate, new object[] {
                        nLevel,
                        bInternal}, this.onEndDeviceDownStreamKeyerEnableDelegate, this.onDeviceDownStreamKeyerEnableCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override scr.services.ingenie.prompter.PrompterSoap CreateChannel() {
            return new PrompterSoapClientChannel(this);
        }
        
        private class PrompterSoapClientChannel : ChannelBase<scr.services.ingenie.prompter.PrompterSoap>, scr.services.ingenie.prompter.PrompterSoap {
            
            public PrompterSoapClientChannel(System.ServiceModel.ClientBase<scr.services.ingenie.prompter.PrompterSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginPrepare(string sTemplateName, scr.services.ingenie.prompter.DynamicValue[] ahDinamicValues, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = sTemplateName;
                _args[1] = ahDinamicValues;
                System.IAsyncResult _result = base.BeginInvoke("Prepare", _args, callback, asyncState);
                return _result;
            }
            
            public scr.services.ingenie.prompter.PrompterPrepareResult EndPrepare(System.IAsyncResult result) {
                object[] _args = new object[0];
                scr.services.ingenie.prompter.PrompterPrepareResult _result = ((scr.services.ingenie.prompter.PrompterPrepareResult)(base.EndInvoke("Prepare", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginStart(long nID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = nID;
                System.IAsyncResult _result = base.BeginInvoke("Start", _args, callback, asyncState);
                return _result;
            }
            
            public void EndStart(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Start", _args, result);
            }
            
            public System.IAsyncResult BeginStop(long nID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = nID;
                System.IAsyncResult _result = base.BeginInvoke("Stop", _args, callback, asyncState);
                return _result;
            }
            
            public void EndStop(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Stop", _args, result);
            }
            
            public System.IAsyncResult BeginOnOffScreenGet(long nID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = nID;
                System.IAsyncResult _result = base.BeginInvoke("OnOffScreenGet", _args, callback, asyncState);
                return _result;
            }
            
            public int[] EndOnOffScreenGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                int[] _result = ((int[])(base.EndInvoke("OnOffScreenGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRollSpeedSet(short nSpeed, long nID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = nSpeed;
                _args[1] = nID;
                System.IAsyncResult _result = base.BeginInvoke("RollSpeedSet", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRollSpeedSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RollSpeedSet", _args, result);
            }
            
            public System.IAsyncResult BeginRestartFrom(int nLine, long nID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = nLine;
                _args[1] = nID;
                System.IAsyncResult _result = base.BeginInvoke("RestartFrom", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRestartFrom(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RestartFrom", _args, result);
            }
            
            public System.IAsyncResult BeginInit(ulong nClientBrowserID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = nClientBrowserID;
                System.IAsyncResult _result = base.BeginInvoke("Init", _args, callback, asyncState);
                return _result;
            }
            
            public string EndInit(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Init", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPing(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Ping", _args, callback, asyncState);
                return _result;
            }
            
            public void EndPing(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Ping", _args, result);
            }
            
            public System.IAsyncResult BeginItemsUpdate(scr.services.ingenie.prompter.Item[] aItems, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = aItems;
                System.IAsyncResult _result = base.BeginInvoke("ItemsUpdate", _args, callback, asyncState);
                return _result;
            }
            
            public scr.services.ingenie.prompter.Item[] EndItemsUpdate(System.IAsyncResult result) {
                object[] _args = new object[0];
                scr.services.ingenie.prompter.Item[] _result = ((scr.services.ingenie.prompter.Item[])(base.EndInvoke("ItemsUpdate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginItemDelete(scr.services.ingenie.prompter.Item cItem, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cItem;
                System.IAsyncResult _result = base.BeginInvoke("ItemDelete", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndItemDelete(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ItemDelete", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginItemPrepare(scr.services.ingenie.prompter.Item cItem, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cItem;
                System.IAsyncResult _result = base.BeginInvoke("ItemPrepare", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndItemPrepare(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ItemPrepare", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginItemStart(scr.services.ingenie.prompter.Item cItem, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cItem;
                System.IAsyncResult _result = base.BeginInvoke("ItemStart", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndItemStart(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ItemStart", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginItemStop(scr.services.ingenie.prompter.Item cItem, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cItem;
                System.IAsyncResult _result = base.BeginInvoke("ItemStop", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndItemStop(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ItemStop", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginWriteError(string sEx, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sEx;
                System.IAsyncResult _result = base.BeginInvoke("WriteError", _args, callback, asyncState);
                return _result;
            }
            
            public void EndWriteError(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("WriteError", _args, result);
            }
            
            public System.IAsyncResult BeginWriteNotice(string sMsg, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sMsg;
                System.IAsyncResult _result = base.BeginInvoke("WriteNotice", _args, callback, asyncState);
                return _result;
            }
            
            public void EndWriteNotice(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("WriteNotice", _args, result);
            }
            
            public System.IAsyncResult BeginDeviceDownStreamKeyerDisable(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DeviceDownStreamKeyerDisable", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeviceDownStreamKeyerDisable(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeviceDownStreamKeyerDisable", _args, result);
            }
            
            public System.IAsyncResult BeginDeviceDownStreamKeyerEnable(byte nLevel, bool bInternal, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = nLevel;
                _args[1] = bInternal;
                System.IAsyncResult _result = base.BeginInvoke("DeviceDownStreamKeyerEnable", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeviceDownStreamKeyerEnable(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeviceDownStreamKeyerEnable", _args, result);
            }
        }
    }
}
