//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace replica.sl.services.preferences {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Clients", Namespace="http://replica/services/Preferences.asmx")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(replica.sl.services.preferences.Preferences))]
    public partial class Clients : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Preferences", Namespace="http://replica/services/Preferences.asmx")]
    public partial class Preferences : replica.sl.services.preferences.Clients {
        
        private long nFramesMinimumField;
        
        private int nFrequencyOfOccurrenceMaxField;
        
        private string sPreviewsPathField;
        
        private string sTrailersPathField;
        
        private string sLocaleField;
        
        private bool bContextMenuDeleteSinceField;
        
        private bool bStatisticsRAOVisibleField;
        
        private bool bStatisticsMessagesVisibleField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long nFramesMinimum {
            get {
                return this.nFramesMinimumField;
            }
            set {
                if ((this.nFramesMinimumField.Equals(value) != true)) {
                    this.nFramesMinimumField = value;
                    this.RaisePropertyChanged("nFramesMinimum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int nFrequencyOfOccurrenceMax {
            get {
                return this.nFrequencyOfOccurrenceMaxField;
            }
            set {
                if ((this.nFrequencyOfOccurrenceMaxField.Equals(value) != true)) {
                    this.nFrequencyOfOccurrenceMaxField = value;
                    this.RaisePropertyChanged("nFrequencyOfOccurrenceMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string sPreviewsPath {
            get {
                return this.sPreviewsPathField;
            }
            set {
                if ((object.ReferenceEquals(this.sPreviewsPathField, value) != true)) {
                    this.sPreviewsPathField = value;
                    this.RaisePropertyChanged("sPreviewsPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string sTrailersPath {
            get {
                return this.sTrailersPathField;
            }
            set {
                if ((object.ReferenceEquals(this.sTrailersPathField, value) != true)) {
                    this.sTrailersPathField = value;
                    this.RaisePropertyChanged("sTrailersPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string sLocale {
            get {
                return this.sLocaleField;
            }
            set {
                if ((object.ReferenceEquals(this.sLocaleField, value) != true)) {
                    this.sLocaleField = value;
                    this.RaisePropertyChanged("sLocale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public bool bContextMenuDeleteSince {
            get {
                return this.bContextMenuDeleteSinceField;
            }
            set {
                if ((this.bContextMenuDeleteSinceField.Equals(value) != true)) {
                    this.bContextMenuDeleteSinceField = value;
                    this.RaisePropertyChanged("bContextMenuDeleteSince");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public bool bStatisticsRAOVisible {
            get {
                return this.bStatisticsRAOVisibleField;
            }
            set {
                if ((this.bStatisticsRAOVisibleField.Equals(value) != true)) {
                    this.bStatisticsRAOVisibleField = value;
                    this.RaisePropertyChanged("bStatisticsRAOVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public bool bStatisticsMessagesVisible {
            get {
                return this.bStatisticsMessagesVisibleField;
            }
            set {
                if ((this.bStatisticsMessagesVisibleField.Equals(value) != true)) {
                    this.bStatisticsMessagesVisibleField = value;
                    this.RaisePropertyChanged("bStatisticsMessagesVisible");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://replica/services/Preferences.asmx", ConfigurationName="services.preferences.PreferencesSoap")]
    public interface PreferencesSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/services/Preferences.asmx/ReplicaGet", ReplyAction="*")]
        System.IAsyncResult BeginReplicaGet(replica.sl.services.preferences.ReplicaGetRequest request, System.AsyncCallback callback, object asyncState);
        
        replica.sl.services.preferences.ReplicaGetResponse EndReplicaGet(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReplicaGetRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReplicaGet", Namespace="http://replica/services/Preferences.asmx", Order=0)]
        public replica.sl.services.preferences.ReplicaGetRequestBody Body;
        
        public ReplicaGetRequest() {
        }
        
        public ReplicaGetRequest(replica.sl.services.preferences.ReplicaGetRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class ReplicaGetRequestBody {
        
        public ReplicaGetRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReplicaGetResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReplicaGetResponse", Namespace="http://replica/services/Preferences.asmx", Order=0)]
        public replica.sl.services.preferences.ReplicaGetResponseBody Body;
        
        public ReplicaGetResponse() {
        }
        
        public ReplicaGetResponse(replica.sl.services.preferences.ReplicaGetResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://replica/services/Preferences.asmx")]
    public partial class ReplicaGetResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public replica.sl.services.preferences.Preferences ReplicaGetResult;
        
        public ReplicaGetResponseBody() {
        }
        
        public ReplicaGetResponseBody(replica.sl.services.preferences.Preferences ReplicaGetResult) {
            this.ReplicaGetResult = ReplicaGetResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PreferencesSoapChannel : replica.sl.services.preferences.PreferencesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReplicaGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReplicaGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public replica.sl.services.preferences.Preferences Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((replica.sl.services.preferences.Preferences)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PreferencesSoapClient : System.ServiceModel.ClientBase<replica.sl.services.preferences.PreferencesSoap>, replica.sl.services.preferences.PreferencesSoap {
        
        private BeginOperationDelegate onBeginReplicaGetDelegate;
        
        private EndOperationDelegate onEndReplicaGetDelegate;
        
        private System.Threading.SendOrPostCallback onReplicaGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PreferencesSoapClient() {
        }
        
        public PreferencesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PreferencesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PreferencesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PreferencesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<ReplicaGetCompletedEventArgs> ReplicaGetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult replica.sl.services.preferences.PreferencesSoap.BeginReplicaGet(replica.sl.services.preferences.ReplicaGetRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReplicaGet(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginReplicaGet(System.AsyncCallback callback, object asyncState) {
            replica.sl.services.preferences.ReplicaGetRequest inValue = new replica.sl.services.preferences.ReplicaGetRequest();
            inValue.Body = new replica.sl.services.preferences.ReplicaGetRequestBody();
            return ((replica.sl.services.preferences.PreferencesSoap)(this)).BeginReplicaGet(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        replica.sl.services.preferences.ReplicaGetResponse replica.sl.services.preferences.PreferencesSoap.EndReplicaGet(System.IAsyncResult result) {
            return base.Channel.EndReplicaGet(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private replica.sl.services.preferences.Preferences EndReplicaGet(System.IAsyncResult result) {
            replica.sl.services.preferences.ReplicaGetResponse retVal = ((replica.sl.services.preferences.PreferencesSoap)(this)).EndReplicaGet(result);
            return retVal.Body.ReplicaGetResult;
        }
        
        private System.IAsyncResult OnBeginReplicaGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginReplicaGet(callback, asyncState);
        }
        
        private object[] OnEndReplicaGet(System.IAsyncResult result) {
            replica.sl.services.preferences.Preferences retVal = this.EndReplicaGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReplicaGetCompleted(object state) {
            if ((this.ReplicaGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReplicaGetCompleted(this, new ReplicaGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReplicaGetAsync() {
            this.ReplicaGetAsync(null);
        }
        
        public void ReplicaGetAsync(object userState) {
            if ((this.onBeginReplicaGetDelegate == null)) {
                this.onBeginReplicaGetDelegate = new BeginOperationDelegate(this.OnBeginReplicaGet);
            }
            if ((this.onEndReplicaGetDelegate == null)) {
                this.onEndReplicaGetDelegate = new EndOperationDelegate(this.OnEndReplicaGet);
            }
            if ((this.onReplicaGetCompletedDelegate == null)) {
                this.onReplicaGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReplicaGetCompleted);
            }
            base.InvokeAsync(this.onBeginReplicaGetDelegate, null, this.onEndReplicaGetDelegate, this.onReplicaGetCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override replica.sl.services.preferences.PreferencesSoap CreateChannel() {
            return new PreferencesSoapClientChannel(this);
        }
        
        private class PreferencesSoapClientChannel : ChannelBase<replica.sl.services.preferences.PreferencesSoap>, replica.sl.services.preferences.PreferencesSoap {
            
            public PreferencesSoapClientChannel(System.ServiceModel.ClientBase<replica.sl.services.preferences.PreferencesSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginReplicaGet(replica.sl.services.preferences.ReplicaGetRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ReplicaGet", _args, callback, asyncState);
                return _result;
            }
            
            public replica.sl.services.preferences.ReplicaGetResponse EndReplicaGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                replica.sl.services.preferences.ReplicaGetResponse _result = ((replica.sl.services.preferences.ReplicaGetResponse)(base.EndInvoke("ReplicaGet", _args, result)));
                return _result;
            }
        }
    }
}
