//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace presentation.sl.services.preferences {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Preferences", Namespace="http://replica/ig/services/Preferences.asmx")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(presentation.sl.services.preferences.Presentation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(presentation.sl.services.preferences.SCR))]
    public partial class Preferences : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Presentation", Namespace="http://replica/ig/services/Preferences.asmx")]
    public partial class Presentation : presentation.sl.services.preferences.Preferences {
        
        private presentation.sl.services.preferences.ArrayOfString aFontFamiliesField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public presentation.sl.services.preferences.ArrayOfString aFontFamilies {
            get {
                return this.aFontFamiliesField;
            }
            set {
                if ((object.ReferenceEquals(this.aFontFamiliesField, value) != true)) {
                    this.aFontFamiliesField = value;
                    this.RaisePropertyChanged("aFontFamilies");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SCR", Namespace="http://replica/ig/services/Preferences.asmx")]
    public partial class SCR : presentation.sl.services.preferences.Preferences {
        
        private presentation.sl.services.preferences.Preset[] aPresetsField;
        
        private presentation.sl.services.preferences.Template[] aTemplatesField;
        
        private string sTemplateChannelMaskField;
        
        private string sTemplatePresetMaskField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public presentation.sl.services.preferences.Preset[] aPresets {
            get {
                return this.aPresetsField;
            }
            set {
                if ((object.ReferenceEquals(this.aPresetsField, value) != true)) {
                    this.aPresetsField = value;
                    this.RaisePropertyChanged("aPresets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public presentation.sl.services.preferences.Template[] aTemplates {
            get {
                return this.aTemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.aTemplatesField, value) != true)) {
                    this.aTemplatesField = value;
                    this.RaisePropertyChanged("aTemplates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string sTemplateChannelMask {
            get {
                return this.sTemplateChannelMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.sTemplateChannelMaskField, value) != true)) {
                    this.sTemplateChannelMaskField = value;
                    this.RaisePropertyChanged("sTemplateChannelMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string sTemplatePresetMask {
            get {
                return this.sTemplatePresetMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.sTemplatePresetMaskField, value) != true)) {
                    this.sTemplatePresetMaskField = value;
                    this.RaisePropertyChanged("sTemplatePresetMask");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Preset", Namespace="http://replica/ig/services/Preferences.asmx")]
    public partial class Preset : presentation.sl.services.preferences.IdNamePair {
        
        private presentation.sl.services.preferences.Channel eChannelField;
        
        private string sFolderField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public presentation.sl.services.preferences.Channel eChannel {
            get {
                return this.eChannelField;
            }
            set {
                if ((this.eChannelField.Equals(value) != true)) {
                    this.eChannelField = value;
                    this.RaisePropertyChanged("eChannel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string sFolder {
            get {
                return this.sFolderField;
            }
            set {
                if ((object.ReferenceEquals(this.sFolderField, value) != true)) {
                    this.sFolderField = value;
                    this.RaisePropertyChanged("sFolder");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Template", Namespace="http://replica/ig/services/Preferences.asmx")]
    public partial class Template : object, System.ComponentModel.INotifyPropertyChanged {
        
        private presentation.sl.services.preferences.Bind eBindField;
        
        private string sFileField;
        
        private int nOffsetInField;
        
        private int nOffsetOutField;
        
        private int nDurationSafeField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public presentation.sl.services.preferences.Bind eBind {
            get {
                return this.eBindField;
            }
            set {
                if ((this.eBindField.Equals(value) != true)) {
                    this.eBindField = value;
                    this.RaisePropertyChanged("eBind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string sFile {
            get {
                return this.sFileField;
            }
            set {
                if ((object.ReferenceEquals(this.sFileField, value) != true)) {
                    this.sFileField = value;
                    this.RaisePropertyChanged("sFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int nOffsetIn {
            get {
                return this.nOffsetInField;
            }
            set {
                if ((this.nOffsetInField.Equals(value) != true)) {
                    this.nOffsetInField = value;
                    this.RaisePropertyChanged("nOffsetIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int nOffsetOut {
            get {
                return this.nOffsetOutField;
            }
            set {
                if ((this.nOffsetOutField.Equals(value) != true)) {
                    this.nOffsetOutField = value;
                    this.RaisePropertyChanged("nOffsetOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int nDurationSafe {
            get {
                return this.nDurationSafeField;
            }
            set {
                if ((this.nDurationSafeField.Equals(value) != true)) {
                    this.nDurationSafeField = value;
                    this.RaisePropertyChanged("nDurationSafe");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://replica/ig/services/Preferences.asmx", ItemName="string")]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdNamePair", Namespace="http://replica/ig/services/Preferences.asmx")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(presentation.sl.services.preferences.Preset))]
    public partial class IdNamePair : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long nIDField;
        
        private string sNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long nID {
            get {
                return this.nIDField;
            }
            set {
                if ((this.nIDField.Equals(value) != true)) {
                    this.nIDField = value;
                    this.RaisePropertyChanged("nID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string sName {
            get {
                return this.sNameField;
            }
            set {
                if ((object.ReferenceEquals(this.sNameField, value) != true)) {
                    this.sNameField = value;
                    this.RaisePropertyChanged("sName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Channel", Namespace="http://replica/ig/services/Preferences.asmx")]
    public enum Channel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        channel1 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        channel2 = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bind", Namespace="http://replica/ig/services/Preferences.asmx")]
    public enum Bind : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        playlist = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        channel_credits = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        channel_logo = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        channel_chat = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        preset_logo = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        preset_credits = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        preset_notice = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        preset_bumper = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://replica/ig/services/Preferences.asmx", ConfigurationName="services.preferences.PreferencesSoap")]
    public interface PreferencesSoap {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/ig/services/Preferences.asmx/SCRGet", ReplyAction="*")]
        System.IAsyncResult BeginSCRGet(presentation.sl.services.preferences.SCRGetRequest request, System.AsyncCallback callback, object asyncState);
        
        presentation.sl.services.preferences.SCRGetResponse EndSCRGet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://replica/ig/services/Preferences.asmx/PresentationGet", ReplyAction="*")]
        System.IAsyncResult BeginPresentationGet(presentation.sl.services.preferences.PresentationGetRequest request, System.AsyncCallback callback, object asyncState);
        
        presentation.sl.services.preferences.PresentationGetResponse EndPresentationGet(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SCRGetRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SCRGet", Namespace="http://replica/ig/services/Preferences.asmx", Order=0)]
        public presentation.sl.services.preferences.SCRGetRequestBody Body;
        
        public SCRGetRequest() {
        }
        
        public SCRGetRequest(presentation.sl.services.preferences.SCRGetRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class SCRGetRequestBody {
        
        public SCRGetRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SCRGetResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SCRGetResponse", Namespace="http://replica/ig/services/Preferences.asmx", Order=0)]
        public presentation.sl.services.preferences.SCRGetResponseBody Body;
        
        public SCRGetResponse() {
        }
        
        public SCRGetResponse(presentation.sl.services.preferences.SCRGetResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://replica/ig/services/Preferences.asmx")]
    public partial class SCRGetResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public presentation.sl.services.preferences.SCR SCRGetResult;
        
        public SCRGetResponseBody() {
        }
        
        public SCRGetResponseBody(presentation.sl.services.preferences.SCR SCRGetResult) {
            this.SCRGetResult = SCRGetResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PresentationGetRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PresentationGet", Namespace="http://replica/ig/services/Preferences.asmx", Order=0)]
        public presentation.sl.services.preferences.PresentationGetRequestBody Body;
        
        public PresentationGetRequest() {
        }
        
        public PresentationGetRequest(presentation.sl.services.preferences.PresentationGetRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class PresentationGetRequestBody {
        
        public PresentationGetRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class PresentationGetResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="PresentationGetResponse", Namespace="http://replica/ig/services/Preferences.asmx", Order=0)]
        public presentation.sl.services.preferences.PresentationGetResponseBody Body;
        
        public PresentationGetResponse() {
        }
        
        public PresentationGetResponse(presentation.sl.services.preferences.PresentationGetResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://replica/ig/services/Preferences.asmx")]
    public partial class PresentationGetResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public presentation.sl.services.preferences.Presentation PresentationGetResult;
        
        public PresentationGetResponseBody() {
        }
        
        public PresentationGetResponseBody(presentation.sl.services.preferences.Presentation PresentationGetResult) {
            this.PresentationGetResult = PresentationGetResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PreferencesSoapChannel : presentation.sl.services.preferences.PreferencesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SCRGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SCRGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public presentation.sl.services.preferences.SCR Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((presentation.sl.services.preferences.SCR)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PresentationGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PresentationGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public presentation.sl.services.preferences.Presentation Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((presentation.sl.services.preferences.Presentation)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PreferencesSoapClient : System.ServiceModel.ClientBase<presentation.sl.services.preferences.PreferencesSoap>, presentation.sl.services.preferences.PreferencesSoap {
        
        private BeginOperationDelegate onBeginSCRGetDelegate;
        
        private EndOperationDelegate onEndSCRGetDelegate;
        
        private System.Threading.SendOrPostCallback onSCRGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginPresentationGetDelegate;
        
        private EndOperationDelegate onEndPresentationGetDelegate;
        
        private System.Threading.SendOrPostCallback onPresentationGetCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PreferencesSoapClient() {
        }
        
        public PreferencesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PreferencesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PreferencesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PreferencesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<SCRGetCompletedEventArgs> SCRGetCompleted;
        
        public event System.EventHandler<PresentationGetCompletedEventArgs> PresentationGetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult presentation.sl.services.preferences.PreferencesSoap.BeginSCRGet(presentation.sl.services.preferences.SCRGetRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSCRGet(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginSCRGet(System.AsyncCallback callback, object asyncState) {
            presentation.sl.services.preferences.SCRGetRequest inValue = new presentation.sl.services.preferences.SCRGetRequest();
            inValue.Body = new presentation.sl.services.preferences.SCRGetRequestBody();
            return ((presentation.sl.services.preferences.PreferencesSoap)(this)).BeginSCRGet(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        presentation.sl.services.preferences.SCRGetResponse presentation.sl.services.preferences.PreferencesSoap.EndSCRGet(System.IAsyncResult result) {
            return base.Channel.EndSCRGet(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private presentation.sl.services.preferences.SCR EndSCRGet(System.IAsyncResult result) {
            presentation.sl.services.preferences.SCRGetResponse retVal = ((presentation.sl.services.preferences.PreferencesSoap)(this)).EndSCRGet(result);
            return retVal.Body.SCRGetResult;
        }
        
        private System.IAsyncResult OnBeginSCRGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginSCRGet(callback, asyncState);
        }
        
        private object[] OnEndSCRGet(System.IAsyncResult result) {
            presentation.sl.services.preferences.SCR retVal = this.EndSCRGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSCRGetCompleted(object state) {
            if ((this.SCRGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SCRGetCompleted(this, new SCRGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SCRGetAsync() {
            this.SCRGetAsync(null);
        }
        
        public void SCRGetAsync(object userState) {
            if ((this.onBeginSCRGetDelegate == null)) {
                this.onBeginSCRGetDelegate = new BeginOperationDelegate(this.OnBeginSCRGet);
            }
            if ((this.onEndSCRGetDelegate == null)) {
                this.onEndSCRGetDelegate = new EndOperationDelegate(this.OnEndSCRGet);
            }
            if ((this.onSCRGetCompletedDelegate == null)) {
                this.onSCRGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSCRGetCompleted);
            }
            base.InvokeAsync(this.onBeginSCRGetDelegate, null, this.onEndSCRGetDelegate, this.onSCRGetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult presentation.sl.services.preferences.PreferencesSoap.BeginPresentationGet(presentation.sl.services.preferences.PresentationGetRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPresentationGet(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginPresentationGet(System.AsyncCallback callback, object asyncState) {
            presentation.sl.services.preferences.PresentationGetRequest inValue = new presentation.sl.services.preferences.PresentationGetRequest();
            inValue.Body = new presentation.sl.services.preferences.PresentationGetRequestBody();
            return ((presentation.sl.services.preferences.PreferencesSoap)(this)).BeginPresentationGet(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        presentation.sl.services.preferences.PresentationGetResponse presentation.sl.services.preferences.PreferencesSoap.EndPresentationGet(System.IAsyncResult result) {
            return base.Channel.EndPresentationGet(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private presentation.sl.services.preferences.Presentation EndPresentationGet(System.IAsyncResult result) {
            presentation.sl.services.preferences.PresentationGetResponse retVal = ((presentation.sl.services.preferences.PreferencesSoap)(this)).EndPresentationGet(result);
            return retVal.Body.PresentationGetResult;
        }
        
        private System.IAsyncResult OnBeginPresentationGet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginPresentationGet(callback, asyncState);
        }
        
        private object[] OnEndPresentationGet(System.IAsyncResult result) {
            presentation.sl.services.preferences.Presentation retVal = this.EndPresentationGet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPresentationGetCompleted(object state) {
            if ((this.PresentationGetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PresentationGetCompleted(this, new PresentationGetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PresentationGetAsync() {
            this.PresentationGetAsync(null);
        }
        
        public void PresentationGetAsync(object userState) {
            if ((this.onBeginPresentationGetDelegate == null)) {
                this.onBeginPresentationGetDelegate = new BeginOperationDelegate(this.OnBeginPresentationGet);
            }
            if ((this.onEndPresentationGetDelegate == null)) {
                this.onEndPresentationGetDelegate = new EndOperationDelegate(this.OnEndPresentationGet);
            }
            if ((this.onPresentationGetCompletedDelegate == null)) {
                this.onPresentationGetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPresentationGetCompleted);
            }
            base.InvokeAsync(this.onBeginPresentationGetDelegate, null, this.onEndPresentationGetDelegate, this.onPresentationGetCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override presentation.sl.services.preferences.PreferencesSoap CreateChannel() {
            return new PreferencesSoapClientChannel(this);
        }
        
        private class PreferencesSoapClientChannel : ChannelBase<presentation.sl.services.preferences.PreferencesSoap>, presentation.sl.services.preferences.PreferencesSoap {
            
            public PreferencesSoapClientChannel(System.ServiceModel.ClientBase<presentation.sl.services.preferences.PreferencesSoap> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSCRGet(presentation.sl.services.preferences.SCRGetRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("SCRGet", _args, callback, asyncState);
                return _result;
            }
            
            public presentation.sl.services.preferences.SCRGetResponse EndSCRGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                presentation.sl.services.preferences.SCRGetResponse _result = ((presentation.sl.services.preferences.SCRGetResponse)(base.EndInvoke("SCRGet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPresentationGet(presentation.sl.services.preferences.PresentationGetRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("PresentationGet", _args, callback, asyncState);
                return _result;
            }
            
            public presentation.sl.services.preferences.PresentationGetResponse EndPresentationGet(System.IAsyncResult result) {
                object[] _args = new object[0];
                presentation.sl.services.preferences.PresentationGetResponse _result = ((presentation.sl.services.preferences.PresentationGetResponse)(base.EndInvoke("PresentationGet", _args, result)));
                return _result;
            }
        }
    }
}
